// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using nf_xml_api.Models;

#pragma warning disable 219, 612, 618
#nullable enable

namespace NotaFiscal
{
    internal partial class ProdutoNotumEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "nf_xml_api.Models.ProdutoNotum",
                typeof(ProdutoNotum),
                baseEntityType);

            var idProduto = runtimeEntityType.AddProperty(
                "IdProduto",
                typeof(long),
                propertyInfo: typeof(ProdutoNotum).GetProperty("IdProduto", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<IdProduto>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw);
            idProduto.AddAnnotation("Relational:ColumnName", "idProduto");
            idProduto.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var cEan = runtimeEntityType.AddProperty(
                "CEan",
                typeof(long),
                propertyInfo: typeof(ProdutoNotum).GetProperty("CEan", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<CEan>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            cEan.AddAnnotation("Relational:ColumnName", "cEAN");
            cEan.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cEantrib = runtimeEntityType.AddProperty(
                "CEantrib",
                typeof(string),
                propertyInfo: typeof(ProdutoNotum).GetProperty("CEantrib", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<CEantrib>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 100,
                unicode: false);
            cEantrib.AddAnnotation("Relational:ColumnName", "cEANTrib");
            cEantrib.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cProd = runtimeEntityType.AddProperty(
                "CProd",
                typeof(long),
                propertyInfo: typeof(ProdutoNotum).GetProperty("CProd", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<CProd>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            cProd.AddAnnotation("Relational:ColumnName", "cProd");
            cProd.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cest = runtimeEntityType.AddProperty(
                "Cest",
                typeof(int),
                propertyInfo: typeof(ProdutoNotum).GetProperty("Cest", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<Cest>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            cest.AddAnnotation("Relational:ColumnName", "CEST");
            cest.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cfop = runtimeEntityType.AddProperty(
                "Cfop",
                typeof(int),
                propertyInfo: typeof(ProdutoNotum).GetProperty("Cfop", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<Cfop>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            cfop.AddAnnotation("Relational:ColumnName", "CFOP");
            cfop.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var idNota = runtimeEntityType.AddProperty(
                "IdNota",
                typeof(long),
                propertyInfo: typeof(ProdutoNotum).GetProperty("IdNota", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<IdNota>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            idNota.AddAnnotation("Relational:ColumnName", "idNota");
            idNota.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var indTot = runtimeEntityType.AddProperty(
                "IndTot",
                typeof(int),
                propertyInfo: typeof(ProdutoNotum).GetProperty("IndTot", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<IndTot>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            indTot.AddAnnotation("Relational:ColumnName", "indTot");
            indTot.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ncm = runtimeEntityType.AddProperty(
                "Ncm",
                typeof(int),
                propertyInfo: typeof(ProdutoNotum).GetProperty("Ncm", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<Ncm>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            ncm.AddAnnotation("Relational:ColumnName", "NCM");
            ncm.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var qCom = runtimeEntityType.AddProperty(
                "QCom",
                typeof(decimal),
                propertyInfo: typeof(ProdutoNotum).GetProperty("QCom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<QCom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            qCom.AddAnnotation("Relational:ColumnName", "qCom");
            qCom.AddAnnotation("Relational:ColumnType", "decimal(5, 2)");
            qCom.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var qTrib = runtimeEntityType.AddProperty(
                "QTrib",
                typeof(decimal),
                propertyInfo: typeof(ProdutoNotum).GetProperty("QTrib", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<QTrib>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            qTrib.AddAnnotation("Relational:ColumnName", "qTrib");
            qTrib.AddAnnotation("Relational:ColumnType", "decimal(5, 2)");
            qTrib.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var uCom = runtimeEntityType.AddProperty(
                "UCom",
                typeof(string),
                propertyInfo: typeof(ProdutoNotum).GetProperty("UCom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<UCom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 6,
                unicode: false);
            uCom.AddAnnotation("Relational:ColumnName", "uCom");
            uCom.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var uTrib = runtimeEntityType.AddProperty(
                "UTrib",
                typeof(string),
                propertyInfo: typeof(ProdutoNotum).GetProperty("UTrib", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<UTrib>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 6,
                unicode: false);
            uTrib.AddAnnotation("Relational:ColumnName", "uTrib");
            uTrib.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var vProd = runtimeEntityType.AddProperty(
                "VProd",
                typeof(decimal),
                propertyInfo: typeof(ProdutoNotum).GetProperty("VProd", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<VProd>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            vProd.AddAnnotation("Relational:ColumnName", "vProd");
            vProd.AddAnnotation("Relational:ColumnType", "decimal(5, 2)");
            vProd.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var vUnCom = runtimeEntityType.AddProperty(
                "VUnCom",
                typeof(decimal),
                propertyInfo: typeof(ProdutoNotum).GetProperty("VUnCom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<VUnCom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            vUnCom.AddAnnotation("Relational:ColumnName", "vUnCom");
            vUnCom.AddAnnotation("Relational:ColumnType", "decimal(5, 2)");
            vUnCom.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var vUnTrib = runtimeEntityType.AddProperty(
                "VUnTrib",
                typeof(decimal),
                propertyInfo: typeof(ProdutoNotum).GetProperty("VUnTrib", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<VUnTrib>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            vUnTrib.AddAnnotation("Relational:ColumnName", "vUnTrib");
            vUnTrib.AddAnnotation("Relational:ColumnType", "decimal(5, 2)");
            vUnTrib.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var xChave = runtimeEntityType.AddProperty(
                "XChave",
                typeof(string),
                propertyInfo: typeof(ProdutoNotum).GetProperty("XChave", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<XChave>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 45,
                unicode: false);
            xChave.AddAnnotation("Relational:ColumnName", "xChave");
            xChave.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var xHash = runtimeEntityType.AddProperty(
                "XHash",
                typeof(string),
                propertyInfo: typeof(ProdutoNotum).GetProperty("XHash", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<XHash>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 35,
                unicode: false);
            xHash.AddAnnotation("Relational:ColumnName", "xHash");
            xHash.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var xProd = runtimeEntityType.AddProperty(
                "XProd",
                typeof(string),
                propertyInfo: typeof(ProdutoNotum).GetProperty("XProd", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<XProd>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 120,
                unicode: false);
            xProd.AddAnnotation("Relational:ColumnName", "xProd");
            xProd.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { idProduto });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__produto___5EEDF7C33D9AF9D9");

            var index = runtimeEntityType.AddIndex(
                new[] { idNota, xChave, xHash });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("IdNota")!, declaringEntityType.FindProperty("XChave")!, declaringEntityType.FindProperty("XHash")! },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("IdNota")!, principalEntityType.FindProperty("XChave")!, principalEntityType.FindProperty("XHash")! })!,
                principalEntityType,
                deleteBehavior: DeleteBehavior.Cascade,
                required: true);

            var importacaoNotaXml = declaringEntityType.AddNavigation("ImportacaoNotaXml",
                runtimeForeignKey,
                onDependent: true,
                typeof(ImportacaoNotaXml),
                propertyInfo: typeof(ProdutoNotum).GetProperty("ImportacaoNotaXml", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ProdutoNotum).GetField("<ImportacaoNotaXml>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var produtoNota = principalEntityType.AddNavigation("ProdutoNota",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<ProdutoNotum>),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("ProdutoNota", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<ProdutoNota>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__produto_nota__3A81B327");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "NOTA_FISCAL");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "produto_nota");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
