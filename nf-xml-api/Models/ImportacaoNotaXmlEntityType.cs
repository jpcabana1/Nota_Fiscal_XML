// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using nf_xml_api.Models;

#pragma warning disable 219, 612, 618
#nullable enable

namespace NotaFiscal
{
    internal partial class ImportacaoNotaXmlEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "nf_xml_api.Models.ImportacaoNotaXml",
                typeof(ImportacaoNotaXml),
                baseEntityType);

            var idNota = runtimeEntityType.AddProperty(
                "IdNota",
                typeof(long),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("IdNota", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<IdNota>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw);
            idNota.AddAnnotation("Relational:ColumnName", "idNota");
            idNota.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var xChave = runtimeEntityType.AddProperty(
                "XChave",
                typeof(string),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("XChave", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<XChave>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 45,
                unicode: false);
            xChave.AddAnnotation("Relational:ColumnName", "xChave");
            xChave.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var xHash = runtimeEntityType.AddProperty(
                "XHash",
                typeof(string),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("XHash", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<XHash>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 35,
                unicode: false);
            xHash.AddAnnotation("Relational:ColumnName", "xHash");
            xHash.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dtImportacao = runtimeEntityType.AddProperty(
                "DtImportacao",
                typeof(DateTime),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("DtImportacao", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<DtImportacao>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd);
            dtImportacao.AddAnnotation("Relational:ColumnName", "dtImportacao");
            dtImportacao.AddAnnotation("Relational:ColumnType", "datetime");
            dtImportacao.AddAnnotation("Relational:DefaultValueSql", "(getdate())");
            dtImportacao.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dtProducao = runtimeEntityType.AddProperty(
                "DtProducao",
                typeof(DateTime),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("DtProducao", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<DtProducao>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd);
            dtProducao.AddAnnotation("Relational:ColumnName", "dtProducao");
            dtProducao.AddAnnotation("Relational:ColumnType", "datetime");
            dtProducao.AddAnnotation("Relational:DefaultValueSql", "(getdate())");
            dtProducao.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var xStatusImportacao = runtimeEntityType.AddProperty(
                "XStatusImportacao",
                typeof(string),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("XStatusImportacao", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<XStatusImportacao>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 25,
                unicode: false);
            xStatusImportacao.AddAnnotation("Relational:ColumnName", "xStatusImportacao");
            xStatusImportacao.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var xmlNota = runtimeEntityType.AddProperty(
                "XmlNota",
                typeof(string),
                propertyInfo: typeof(ImportacaoNotaXml).GetProperty("XmlNota", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ImportacaoNotaXml).GetField("<XmlNota>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            xmlNota.AddAnnotation("Relational:ColumnName", "xmlNota");
            xmlNota.AddAnnotation("Relational:ColumnType", "xml");
            xmlNota.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { idNota, xChave, xHash });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__importac__2F4CB906EC736FFA");

            var uQ__importac__213FF288A7B456B3 = runtimeEntityType.AddIndex(
                new[] { xChave, xHash },
                name: "UQ__importac__213FF288A7B456B3",
                unique: true);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "NOTA_FISCAL");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "importacao_nota_xml");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
